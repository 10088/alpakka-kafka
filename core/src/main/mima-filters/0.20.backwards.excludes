ProblemFilters.exclude[DirectMissingMethodProblem]("akka.kafka.ConsumerSettings.<init>$default$12")
ProblemFilters.exclude[DirectMissingMethodProblem]("akka.kafka.ConsumerSettings.this")
ProblemFilters.exclude[IncompatibleResultTypeProblem]("akka.kafka.ConsumerSettings.<init>$default$13")
ProblemFilters.exclude[DirectMissingMethodProblem]("akka.kafka.ProducerSettings.this")
ProblemFilters.exclude[Problem]("akka.kafka.internal.*")

# changes as of move of KafkaConsumerActor into internal package
ProblemFilters.exclude[FinalClassProblem]("akka.kafka.KafkaConsumerActor")
ProblemFilters.exclude[DirectMissingMethodProblem]("akka.kafka.KafkaConsumerActor.rebalanceListener")
ProblemFilters.exclude[DirectMissingMethodProblem]("akka.kafka.KafkaConsumerActor.subscriptions")
ProblemFilters.exclude[DirectMissingMethodProblem]("akka.kafka.KafkaConsumerActor.consumer_=")
ProblemFilters.exclude[DirectMissingMethodProblem]("akka.kafka.KafkaConsumerActor.pollMsg")
ProblemFilters.exclude[DirectMissingMethodProblem]("akka.kafka.KafkaConsumerActor.wakeups")
ProblemFilters.exclude[DirectMissingMethodProblem]("akka.kafka.KafkaConsumerActor.aroundPreRestart")
ProblemFilters.exclude[DirectMissingMethodProblem]("akka.kafka.KafkaConsumerActor.commitsInProgress")
ProblemFilters.exclude[DirectMissingMethodProblem]("akka.kafka.KafkaConsumerActor.aroundReceive")
ProblemFilters.exclude[DirectMissingMethodProblem]("akka.kafka.KafkaConsumerActor.requests_=")
ProblemFilters.exclude[DirectMissingMethodProblem]("akka.kafka.KafkaConsumerActor.log")
ProblemFilters.exclude[DirectMissingMethodProblem]("akka.kafka.KafkaConsumerActor.requests")
ProblemFilters.exclude[DirectMissingMethodProblem]("akka.kafka.KafkaConsumerActor.requestors_=")
ProblemFilters.exclude[DirectMissingMethodProblem]("akka.kafka.KafkaConsumerActor.postRestart")
ProblemFilters.exclude[DirectMissingMethodProblem]("akka.kafka.KafkaConsumerActor.aroundPostRestart")
ProblemFilters.exclude[DirectMissingMethodProblem]("akka.kafka.KafkaConsumerActor.commitsInProgress_=")
ProblemFilters.exclude[DirectMissingMethodProblem]("akka.kafka.KafkaConsumerActor.requestors")
ProblemFilters.exclude[DirectMissingMethodProblem]("akka.kafka.KafkaConsumerActor.currentPollTask")
ProblemFilters.exclude[DirectMissingMethodProblem]("akka.kafka.KafkaConsumerActor.delayedPollInFlight_=")
ProblemFilters.exclude[DirectMissingMethodProblem]("akka.kafka.KafkaConsumerActor.aroundPostStop")
ProblemFilters.exclude[DirectMissingMethodProblem]("akka.kafka.KafkaConsumerActor.consumer")
ProblemFilters.exclude[DirectMissingMethodProblem]("akka.kafka.KafkaConsumerActor.currentPollTask_=")
ProblemFilters.exclude[DirectMissingMethodProblem]("akka.kafka.KafkaConsumerActor.postStop")
ProblemFilters.exclude[DirectMissingMethodProblem]("akka.kafka.KafkaConsumerActor.aroundPreStart")
ProblemFilters.exclude[DirectMissingMethodProblem]("akka.kafka.KafkaConsumerActor.stopInProgress")
ProblemFilters.exclude[DirectMissingMethodProblem]("akka.kafka.KafkaConsumerActor.scheduleFirstPollTask")
ProblemFilters.exclude[DirectMissingMethodProblem]("akka.kafka.KafkaConsumerActor.schedulePollTask")
ProblemFilters.exclude[DirectMissingMethodProblem]("akka.kafka.KafkaConsumerActor.preStart")
ProblemFilters.exclude[DirectMissingMethodProblem]("akka.kafka.KafkaConsumerActor.stopInProgress_=")
ProblemFilters.exclude[DirectMissingMethodProblem]("akka.kafka.KafkaConsumerActor.self")
ProblemFilters.exclude[DirectMissingMethodProblem]("akka.kafka.KafkaConsumerActor.receive")
ProblemFilters.exclude[DirectMissingMethodProblem]("akka.kafka.KafkaConsumerActor.delayedPollMsg")
ProblemFilters.exclude[DirectMissingMethodProblem]("akka.kafka.KafkaConsumerActor.poll")
ProblemFilters.exclude[DirectMissingMethodProblem]("akka.kafka.KafkaConsumerActor.preRestart")
ProblemFilters.exclude[DirectMissingMethodProblem]("akka.kafka.KafkaConsumerActor.supervisorStrategy")
ProblemFilters.exclude[DirectMissingMethodProblem]("akka.kafka.KafkaConsumerActor.checkOverlappingRequests")
ProblemFilters.exclude[DirectMissingMethodProblem]("akka.kafka.KafkaConsumerActor.wakeups_=")
ProblemFilters.exclude[DirectMissingMethodProblem]("akka.kafka.KafkaConsumerActor.stopping")
ProblemFilters.exclude[DirectMissingMethodProblem]("akka.kafka.KafkaConsumerActor.unhandled")
ProblemFilters.exclude[DirectMissingMethodProblem]("akka.kafka.KafkaConsumerActor.delayedPollInFlight")
ProblemFilters.exclude[DirectMissingMethodProblem]("akka.kafka.KafkaConsumerActor.handleSubscription")
ProblemFilters.exclude[DirectMissingMethodProblem]("akka.kafka.KafkaConsumerActor.pollTimeout")
ProblemFilters.exclude[DirectMissingMethodProblem]("akka.kafka.KafkaConsumerActor.sender")
ProblemFilters.exclude[DirectMissingMethodProblem]("akka.kafka.KafkaConsumerActor.subscriptions_=")
ProblemFilters.exclude[DirectMissingMethodProblem]("akka.kafka.KafkaConsumerActor.this")
ProblemFilters.exclude[DirectMissingMethodProblem]("akka.kafka.KafkaConsumerActor.context")
ProblemFilters.exclude[DirectMissingMethodProblem]("akka.kafka.KafkaConsumerActor.pollInterval")
ProblemFilters.exclude[MissingClassProblem]("akka.kafka.KafkaConsumerActor$Internal$")
ProblemFilters.exclude[MissingClassProblem]("akka.kafka.KafkaConsumerActor$Internal$Assign")
ProblemFilters.exclude[MissingClassProblem]("akka.kafka.KafkaConsumerActor$Internal$Assign$")
ProblemFilters.exclude[MissingClassProblem]("akka.kafka.KafkaConsumerActor$Internal$Assigned")
ProblemFilters.exclude[MissingClassProblem]("akka.kafka.KafkaConsumerActor$Internal$Assigned$")
ProblemFilters.exclude[MissingClassProblem]("akka.kafka.KafkaConsumerActor$Internal$AssignWithOffset")
ProblemFilters.exclude[MissingClassProblem]("akka.kafka.KafkaConsumerActor$Internal$AssignWithOffset$")
ProblemFilters.exclude[MissingClassProblem]("akka.kafka.KafkaConsumerActor$Internal$AssignOffsetsForTimes")
ProblemFilters.exclude[MissingClassProblem]("akka.kafka.KafkaConsumerActor$Internal$AssignOffsetsForTimes$")
ProblemFilters.exclude[MissingClassProblem]("akka.kafka.KafkaConsumerActor$Internal$Commit")
ProblemFilters.exclude[MissingClassProblem]("akka.kafka.KafkaConsumerActor$Internal$Commit$")
ProblemFilters.exclude[MissingClassProblem]("akka.kafka.KafkaConsumerActor$Internal$Committed")
ProblemFilters.exclude[MissingClassProblem]("akka.kafka.KafkaConsumerActor$Internal$Committed$")
ProblemFilters.exclude[MissingClassProblem]("akka.kafka.KafkaConsumerActor$Internal$ConsumerMetrics")
ProblemFilters.exclude[MissingClassProblem]("akka.kafka.KafkaConsumerActor$Internal$ConsumerMetrics$")
ProblemFilters.exclude[MissingClassProblem]("akka.kafka.KafkaConsumerActor$Internal$Messages")
ProblemFilters.exclude[MissingClassProblem]("akka.kafka.KafkaConsumerActor$Internal$Messages$")
ProblemFilters.exclude[MissingClassProblem]("akka.kafka.KafkaConsumerActor$Internal$NoPollResult")
ProblemFilters.exclude[MissingClassProblem]("akka.kafka.KafkaConsumerActor$Internal$Poll")
ProblemFilters.exclude[MissingClassProblem]("akka.kafka.KafkaConsumerActor$Internal$Poll$")
ProblemFilters.exclude[MissingClassProblem]("akka.kafka.KafkaConsumerActor$Internal$Revoked")
ProblemFilters.exclude[MissingClassProblem]("akka.kafka.KafkaConsumerActor$Internal$Revoked$")
ProblemFilters.exclude[MissingClassProblem]("akka.kafka.KafkaConsumerActor$Internal$RequestMessages")
ProblemFilters.exclude[MissingClassProblem]("akka.kafka.KafkaConsumerActor$Internal$RequestMessages$")
ProblemFilters.exclude[MissingClassProblem]("akka.kafka.KafkaConsumerActor$Internal$RequestMetrics$")
ProblemFilters.exclude[MissingClassProblem]("akka.kafka.KafkaConsumerActor$Internal$Seek")
ProblemFilters.exclude[MissingClassProblem]("akka.kafka.KafkaConsumerActor$Internal$Seek$")
ProblemFilters.exclude[MissingClassProblem]("akka.kafka.KafkaConsumerActor$Internal$Stop$")
ProblemFilters.exclude[MissingClassProblem]("akka.kafka.KafkaConsumerActor$Internal$Subscribe")
ProblemFilters.exclude[MissingClassProblem]("akka.kafka.KafkaConsumerActor$Internal$Subscribe$")
ProblemFilters.exclude[MissingClassProblem]("akka.kafka.KafkaConsumerActor$Internal$SubscribePattern")
ProblemFilters.exclude[MissingClassProblem]("akka.kafka.KafkaConsumerActor$Internal$SubscribePattern$")
ProblemFilters.exclude[MissingClassProblem]("akka.kafka.KafkaConsumerActor$Internal$SubscriptionRequest")
ProblemFilters.exclude[MissingClassProblem]("akka.kafka.KafkaConsumerActor$ListenerCallbacks")
ProblemFilters.exclude[MissingClassProblem]("akka.kafka.KafkaConsumerActor$ListenerCallbacks$")
ProblemFilters.exclude[MissingClassProblem]("akka.kafka.KafkaConsumerActor$WrappedAutoPausedListener")
